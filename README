my dwm (dynamic window manager) fork
============================
dwm is an extremely fast, small, and dynamic window manager for X. I have added a decent amount of patches to the point where it probably isn't very minimal anymore

Requirements
------------
- In order to build dwm you need the Xlib header files.
- sxhkd for window spawing or edit config.def.h 

Patches
-------
if there is a patch that you do not want then you can remove it with, however when you add this many patches they don't generally play well together and a lot of patches had to be made manually so it prob won't work. That being said if you can remove a patch you are smart enough to build out your own dwm fork, do that instead and get some ideas from what I have done here. Anyway here is a list of the patches and how I use them:

- alwayscenter
floating windows are always centered when spawned. 

- attachdirection
lets you choose where you want new windows to be spawned. I have it so that new windows attach to the bottom of the stack

- colorbar, status2d
more customizable colors in status bar. colorbar lets you change the foreground and background color of every statusbar element and status2d lets be set colors in by bar script.

- float-border-color
sepperate border color for floating windows

- fixborders
fixes border transparency when using a compositor. This an addon to the alpha patch. I don't use alpha or a compositor anymore but it's nice to have for when I want to play with compositor stuff

- noborderfloatingfix
the noborder patch (removes border if only one window is visible) but always shows border for floating windows. Mostly for compatibility with the float-border-color patch but it's still nice to see a border on floating windows

- gridmode, winview, focusonnetactive
gridmode is a layout that makes all windows the same size in a grid, I have set tag "0" to have the gridmode layout by also setting the layout with the same keybind (note this is only really useful if you have the pertag patch). This lets me see all of my windows in sort of a "windows alt+tab" view. winview takes the currently focused window sends a _NET_ACTIVE_WINDOW client message to dwm. By default _NET_ACTIVE_WINDOW only sets the window to urgent, it does not change the tag. This is where focusonnetactive comes in and changes the tag, effectively letting winview jump to the the tag of the focused window from the overview screen.

- hide_vacant_tags
p self explanitory but it hide tags with no clients in the status bar. Just makes everything a little cleaner

- movestack
move clients up and down in the stack, doesn't make sense why this isn't a default

- pertag, combo
these don't play well together but some guy on the internet made this:
https://old.reddit.com/r/suckless/comments/g1fxyn/making_pertag_and_combo_play_nicely_together/fpsu125/
pertag lets you have a different layout per tag. Combo makes it easier to move windows and view tags around by holding the tag number. makes selecting multiple tags very easy and fluid. 

- resetlayout, cfacts
resets layouts on keybind or when only one window is on a tag, I also modified it to also reset cfacts

- restoreafterrestart
modified a bit after the patch didn't work but restores the windows to the tags they were in before a restart. This is nice for when I want to see changes I've made to dwm without closing any of my apps or reorginizing. I also can update .Xresources without closing dwm. The main use I get out of this is changing dpi and cursor size when plugging into another monitor that I want scaled differnetly.

- statusallmons
the statusbar is shown on all monitors when using multiple. 

- warp
Warp moves the mouse to the senter of your focused window. I use this in conjunction with xbanish. The cursor hides when I am using keybinds to move around and shows up when I move it again right where I need it to be bc of warp.

tdrop
-----
tdrop is a drop down terminal that essentially acts like a wm agnostic scratchpad. It does not have offical support for dwm so there is some stuff in the config.def.h specifically for scratchpads. If you don't use tdrop you can safely remove those lines.

Keybinds
--------
I use sxkhd for my keybinds bc it is wm agnostic. All keybinds pertaining to window management (and currently dmenu bc im lazy) are set in config.def.h while launching applications is set in sxhkd

Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default). The best place to put it imho is ~/.local/bin so that it it can follow you around in your /home partition. letting you distrohop without reconfiguring or pulling your dwm config

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install

Running dwm
-----------
Add the following line to your .xinitrc or make a script that is called in your .xinitrc to start dwm using startx:

#automatically restarts dwm when quit with the dwm keybind
#but lets you force quit with pkill dwm

while $(type dwm >/dev/null) ; do
  dwm && continue || break
done

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc or make a script that is called in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done
